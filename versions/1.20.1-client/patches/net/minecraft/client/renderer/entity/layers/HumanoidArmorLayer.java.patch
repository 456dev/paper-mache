--- a/net/minecraft/client/renderer/entity/layers/HumanoidArmorLayer.java
+++ b/net/minecraft/client/renderer/entity/layers/HumanoidArmorLayer.java
@@ -58,21 +58,20 @@
 
     private void renderArmorPiece(PoseStack poseStack, MultiBufferSource buffer, T livingEntity, EquipmentSlot slot, int packedLight, A model) {
         ItemStack itemBySlot = livingEntity.getItemBySlot(slot);
-        Item flag = itemBySlot.getItem();
-        if (flag instanceof ArmorItem armorItem) {
+        if (itemBySlot.getItem() instanceof ArmorItem armorItem) {
             if (armorItem.getEquipmentSlot() == slot) {
                 this.getParentModel().copyPropertiesTo(model);
                 this.setPartVisibility(model, slot);
-                boolean flagx = this.usesInnerModel(slot);
+                boolean flag = this.usesInnerModel(slot);
                 if (armorItem instanceof DyeableArmorItem dyeableArmorItem) {
                     int color = dyeableArmorItem.getColor(itemBySlot);
                     float f = (float)(color >> 16 & 0xFF) / 255.0F;
                     float f1 = (float)(color >> 8 & 0xFF) / 255.0F;
                     float f2 = (float)(color & 0xFF) / 255.0F;
-                    this.renderModel(poseStack, buffer, packedLight, armorItem, model, flagx, f, f1, f2, null);
-                    this.renderModel(poseStack, buffer, packedLight, armorItem, model, flagx, 1.0F, 1.0F, 1.0F, "overlay");
+                    this.renderModel(poseStack, buffer, packedLight, armorItem, model, flag, f, f1, f2, null);
+                    this.renderModel(poseStack, buffer, packedLight, armorItem, model, flag, 1.0F, 1.0F, 1.0F, "overlay");
                 } else {
-                    this.renderModel(poseStack, buffer, packedLight, armorItem, model, flagx, 1.0F, 1.0F, 1.0F, null);
+                    this.renderModel(poseStack, buffer, packedLight, armorItem, model, flag, 1.0F, 1.0F, 1.0F, null);
                 }
 
                 ArmorTrim.getTrim(livingEntity.level().registryAccess(), itemBySlot)
